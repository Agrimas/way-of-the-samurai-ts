{"version":3,"sources":["components/MessagesPage/MessagesPage.module.css","components/MessagesPage/Dialog/Dialog.module.css","components/MessagesPage/Dialog/Message/Message.module.css","../node_modules/classnames/index.js","components/MessagesPage/DialogsNav/DialogsNav.module.css","components/MessagesPage/Dialog/Message/Message.tsx","components/MessagesPage/Dialog/DialogContainer.tsx","components/MessagesPage/Dialog/Dialog.tsx","components/MessagesPage/DialogsNav/DialogsNavContainer.tsx","components/MessagesPage/DialogsNav/DialogsNav.tsx","components/MessagesPage/MessagesPage.tsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","Message","isMine","text","className","cn","Classes","item","fromThem","DialogContainer","connect","state","messages","messagesPage","addMessage","props","useState","textareaValueDialog","setTextareaValueDialog","map","message","id","container","messagesBody","messagesForm","textarea","onChange","event","currentTarget","value","type","button","onClick","DialogsNavContainer","dialogs","title","dialog","to","navLink","name","WithAuthRedirect"],"mappings":";yHACAA,EAAOC,QAAU,CAAC,UAAY,kC,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,aAAe,6BAA6B,aAAe,6BAA6B,SAAW,yBAAyB,OAAS,yB,oBCA7LD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,4B,oBCD3F,OAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBrB,EAAOC,SAC3CG,EAAWkB,QAAUlB,EACrBJ,EAAOC,QAAUG,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,oBCNDJ,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,0BAA0B,QAAU,8B,mJCIjG,SAASsB,EAAT,GAA+C,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAC7B,OAAID,EAEI,mBAAGE,UAAWC,IAAGC,IAAQC,KAAMD,IAAQJ,QAAvC,SAAiDC,IAIrD,mBAAGC,UAAWC,IAAGC,IAAQC,KAAMD,IAAQE,UAAvC,SAAmDL,I,YCApD,IAAMM,EAAkBC,aAN/B,SAAyBC,GACrB,MAAO,CACHC,SAAUD,EAAME,aAAaD,YAImB,CAACE,gBAA1BJ,ECFxB,SAAgBK,GACnB,MAAsDC,mBAAS,IAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KAEMN,EAAWG,EAAMH,SAASO,KAAI,SAAAC,GAAO,OAAI,cAACnB,EAAD,CACSoB,GAAID,EAAQC,GACZlB,KAAMiB,EAAQjB,KACdD,OAAQkB,EAAQlB,QAHXkB,EAAQC,OAerE,OACI,sBAAKjB,UAAWE,IAAQgB,UAAxB,UACI,qBAAKlB,UAAWE,IAAQiB,aAAxB,SACKX,IAGL,sBAAKR,UAAWE,IAAQkB,aAAxB,UACI,0BAAUpB,UAAWE,IAAQmB,SAAUC,SAjBnD,SAAiCC,GAC7BT,EAAuBS,EAAMC,cAAcC,QAgBuCA,MAAOZ,IACjF,uBAAOa,KAAK,SAASD,MAAO,OAAQzB,UAAWE,IAAQyB,OAAQC,QAd3E,WACIjB,EAAMD,WAAWG,GACjBC,EAAuB,gB,0BCbxB,IAAMe,EAAsBvB,aANnC,SAAyBC,GACrB,MAAO,CACHuB,QAASvB,EAAME,aAAaqB,WAIwB,GAAzBxB,ECF5B,YAA6C,IAAxBwB,EAAuB,EAAvBA,QACxB,OACI,sBAAK9B,UAAWE,IAAQgB,UAAxB,UACI,oBAAIlB,UAAWE,IAAQ6B,MAAvB,wBAGCD,EAAQf,KAAI,SAAAiB,GAAM,OACf,cAAC,IAAD,CAEIC,GAAI,aAAeD,EAAOf,GAC1BjB,UAAWE,IAAQgC,QAHvB,SAKKF,EAAOG,MAJHH,EAAOf,a,QCFjBmB,uBATf,WACI,OACI,sBAAKpC,UAAWE,IAAQgB,UAAxB,UACI,cAACW,EAAD,IACA,cAACxB,EAAD","file":"static/js/3.8e8f7b55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MessagesPage_container__1GFIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialog_container__3KnmV\",\"messagesBody\":\"Dialog_messagesBody__3ITpV\",\"messagesForm\":\"Dialog_messagesForm__1wxVm\",\"textarea\":\"Dialog_textarea__3pEeM\",\"button\":\"Dialog_button__10nu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__1XiE5\",\"isMine\":\"Message_isMine__xUZvB\",\"fromThem\":\"Message_fromThem__3nRpt\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogsNav_container__90XyX\",\"title\":\"DialogsNav_title__3qwEp\",\"navLink\":\"DialogsNav_navLink__28k50\"};","import React from 'react';\r\nimport Classes from './Message.module.css';\r\nimport {MessageType} from '../../../../redux/reducers/dialogs-reducer';\r\nimport cn from 'classnames';\r\n\r\nexport function Message({isMine, text}: MessageType) {\r\n    if (isMine) {\r\n        return (\r\n            <p className={cn(Classes.item, Classes.isMine)}>{text}</p>\r\n        );\r\n    }\r\n    return (\r\n        <p className={cn(Classes.item, Classes.fromThem)}>{text}</p>\r\n    );\r\n}","import React from 'react';\r\nimport {addMessage} from '../../../redux/reducers/dialogs-reducer';\r\nimport {Dialog} from './Dialog';\r\nimport {connect} from 'react-redux';\r\nimport {StateType} from '../../../redux/redux-store';\r\n\r\nfunction mapStateToProps(state: StateType) {\r\n    return {\r\n        messages: state.messagesPage.messages,\r\n    }\r\n}\r\n\r\nexport const DialogContainer = connect(mapStateToProps, {addMessage})(Dialog);","import React, {ChangeEvent, useState} from 'react';\r\nimport Classes from './Dialog.module.css';\r\nimport {Message} from './Message/Message';\r\nimport {MessagesType} from '../../../redux/reducers/dialogs-reducer';\r\n\r\ntype DialogType = {\r\n    messages: MessagesType\r\n    addMessage: (text: string) => void\r\n}\r\n\r\nexport function Dialog(props: DialogType) {\r\n    const [textareaValueDialog, setTextareaValueDialog] = useState('');\r\n\r\n    const messages = props.messages.map(message => <Message key={message.id}\r\n                                                            id={message.id}\r\n                                                            text={message.text}\r\n                                                            isMine={message.isMine}/>)\r\n\r\n    function onChangeTextareaHandler(event: ChangeEvent<HTMLTextAreaElement>) {\r\n        setTextareaValueDialog(event.currentTarget.value)\r\n    }\r\n\r\n    function addMessage() {\r\n        props.addMessage(textareaValueDialog);\r\n        setTextareaValueDialog('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={Classes.container}>\r\n            <div className={Classes.messagesBody}>\r\n                {messages}\r\n\r\n            </div>\r\n            <div className={Classes.messagesForm}>\r\n                <textarea className={Classes.textarea} onChange={onChangeTextareaHandler} value={textareaValueDialog}/>\r\n                <input type=\"button\" value={'Send'} className={Classes.button} onClick={addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DialogsNav} from './DialogsNav';\r\nimport {StateType} from '../../../redux/redux-store';\r\n\r\nfunction mapStateToProps(state: StateType) {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs\r\n    }\r\n}\r\n\r\nexport const DialogsNavContainer = connect(mapStateToProps, {})(DialogsNav);","import React from 'react';\r\nimport Classes from './DialogsNav.module.css';\r\nimport {DialogType} from '../../../redux/reducers/dialogs-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogsType = {\r\n    dialogs: Array<DialogType>\r\n}\r\n\r\nexport function DialogsNav({dialogs}: DialogsType) {\r\n    return (\r\n        <div className={Classes.container}>\r\n            <h3 className={Classes.title}>\r\n                My Dialogs\r\n            </h3>\r\n            {dialogs.map(dialog =>\r\n                <NavLink\r\n                    key={dialog.id}\r\n                    to={'/messages/' + dialog.id}\r\n                    className={Classes.navLink}>\r\n\r\n                    {dialog.name}\r\n                </NavLink>)}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport Classes from './MessagesPage.module.css';\r\nimport {DialogContainer} from './Dialog/DialogContainer';\r\nimport {DialogsNavContainer} from './DialogsNav/DialogsNavContainer';\r\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect';\r\n\r\nfunction MessagesPage() {\r\n    return (\r\n        <div className={Classes.container}>\r\n            <DialogsNavContainer/>\r\n            <DialogContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WithAuthRedirect(MessagesPage);\r\n"],"sourceRoot":""}